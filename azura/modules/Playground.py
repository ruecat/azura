import nextcord
from nextcord.ext import commands, application_checks
from nextcord import Locale

class ButtonManager(nextcord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(nextcord.ui.Select(options=[
            nextcord.SelectOption(label="üîÑ –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ", value="status_checking"),
            nextcord.SelectOption(label="üü© –•–æ—Ä–æ—à–µ–µ", value="status_good"),
            nextcord.SelectOption(label="üü® –°—Ä–µ–¥–Ω–µ", value="status_average"),
            nextcord.SelectOption(label="üüß –ù–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ", value="status_below_average"),
            nextcord.SelectOption(label="üü• –ü–ª–æ—Ö–æ–µ", value="status_bad"),
        ], placeholder="–°–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞"))

    @nextcord.ui.button(label="ü•æ –ö–∏–∫–Ω—É—Ç—å", custom_id="kick_user", style=nextcord.ButtonStyle.red)
    async def drama_kick(self, interaction: nextcord.Interaction):
        await interaction.response.send_message("Approved.", ephemeral=True)

    @nextcord.ui.button(label="üö´ –ó–∞–±–∞–Ω–∏—Ç—å", custom_id="ban_user", style=nextcord.ButtonStyle.red)
    async def drama_ban(self, interaction: nextcord.Interaction):
        await interaction.response.send_message("Approved.", ephemeral=True)

    @nextcord.ui.button(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–∑ –ë–î", custom_id="vanish_user", style=nextcord.ButtonStyle.grey)
    async def drama_remredis(self, interaction: nextcord.Interaction):
        await interaction.response.send_message("Approved.", ephemeral=True)
        # to-do
        # üü© –í —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        # üü® –ï—Å—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏—è
        # üüß –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π
        # üü• –ü–ª–æ—Ö–æ–µ
        # üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏


class fireplace(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    def check_if_it_is_me(self: nextcord.Interaction):
        return self.user.id == 336578057294970881

    @nextcord.user_command(guild_ids=[1115253435210666014])
    @application_checks.check(check_if_it_is_me)
    async def DramaPanel(self, interaction: nextcord.Interaction, member: nextcord.Member):
        pview = nextcord.Embed(title=f"DramaPanel: {member.name}", description="–ß—Ç–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å?", color=0x2b2d30)
        pview.set_thumbnail(url=member.avatar.url)
        pview.set_footer(text=f"AzuraDramaPanel | MemberID: {member.id}")
        pview.add_field(name="–£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è:", value=f"üîÑ –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ", inline=False)
        await interaction.response.send_message(f"–°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ..", embed=pview, ephemeral=True,
                                                view=ButtonManager())

    @nextcord.slash_command(name="sandctl")
    async def sandctl(self, interaction: nextcord.Interaction):
        """a"""

    @sandctl.subcommand(name="oreo", description="–®–∞–±–ª–æ–Ω –¥–ª—è OreoNetwork",)
    async def oreo_template(self, interaction: nextcord.Interaction):
        embed = nextcord.Embed(title="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –Ω–∞ –ø—Ä–æ–µ–∫—Ç–µ OreoNetwork!", color=0xBEE5BF)
        embed.add_field(name="IP", value="`beta.oreo.re`", inline=False)
        embed.add_field(name="–†–µ–ø–æ—Ä—Ç –±–∞–≥–æ–≤", value="–ï—Å–ª–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —É—è–∑–≤–∏–º–æ—Å—Ç—å –∏–ª–∏ –±–∞–≥, —Å–º–µ–ª–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –µ–≥–æ –≤ –∫–∞–Ω–∞–ª [<#1133510531282645082>]", inline=False)
        await interaction.response.send_message(embed=embed)
    @sandctl.subcommand(name="welcome", description="–®–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞",)
    async def welcome_template(self, interaction: nextcord.Interaction):
        embed = nextcord.Embed(title="–° –ø—Ä–∏–±—ã—Ç–∏–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä!", color=0xBEE5BF)
        embed.add_field(name="–ë—ã—Å—Ç—Ä–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º", value=">>> [**–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª**] –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —á—Ç–æ –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ  üëÄ\n**–í—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞**\n<#956264392884912169>\n**–†–æ–∑—ã–≥—Ä—ã—à–∏ –æ—Ç –Ω–∞—Å –∏–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞!**\n<#1164603669308772373>", inline=False)
        await interaction.response.send_message(embed=embed)
    @sandctl.subcommand(name="block", description="–®–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞",)
    async def info(self, interaction: nextcord.Interaction):
        embed = nextcord.Embed(title="ClarLand –æ—Ç–≤—è–∑–∞–Ω –æ—Ç AzuraCMS", color=0xFF0000)
        embed.add_field(name="–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞", value="–í —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ", inline=False)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value="–£—è–∑–≤–∏–º–æ—Å—Ç—å False-Positive —Ç–∏–ø–∞: –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ DiscordCDN –∏–¥–µ—Ç "
                                              "–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞.", inline=False)

        await interaction.response.send_message(embed=embed)


def setup(bot):
    bot.add_cog(fireplace(bot))
    # profile = nextcord.Embed(title=f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞", description="‚¨áÔ∏é –°—Ç–∞—Ç—É—Å –¥–æ–≤–µ—Ä–∏—è –∏–∑–º–µ–Ω—ë–Ω.",
    # color=0xFF8000) profile.set_thumbnail(url=member.avatar.url) profile.set_footer(text=f"AzuraCoreTrust | –°–ª—É—á–∞–π:
    # #10 | UID: {member.id}") profile.add_field(name="–£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è:", value=f"üüß –ù–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ", inline=False)
    # profile.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=f"–í–æ–∑–º–æ–∂–Ω—ã–π —Ç–≤–∏–Ω–∫-–∞–∫–∫–∞—É–Ω—Ç (–ù–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å)", inline=False) await
    # member.send(embed=profile)
